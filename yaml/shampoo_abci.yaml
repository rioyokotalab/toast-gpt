program: train.py
method: grid
metric:
  name: train/loss
  goal: minimize
parameters:
  log_interval:
    value: 1
  dataset:
    value: 'openwebtext'
  gradient_accumulation_steps:
    value: 8
  batch_size:
    value: 12
  block_size:
    value: 1024
  n_layer:
    value: 12
  n_head:
    value: 12
  n_embd:
    value: 768
  beta1:
    value: 0.9
  beta2:
    value: 0.85
  learning_rate:
    values: [3e-3]
  max_iters:
    value: 10000
  lr_decay_iters:
    value: 10000
  warmup_iters:
    value: 2000
  eval_iters:
    value: 20
  eval_interval:
    value: 20
  matrix_eps:
    values: [1e-8]
  gradient_value_clip:
    value: -1
  optim:
    values: ['Shampoo']
  weight_decay:
    values: [1e-1]
  grafting:
    value: 'AdaGrad'
  start_preconditioning_step:
    value: 25
  statistics_compute_steps:
    values: [1, 3, 10, 30]
  early_statistics_compute_steps:
    values: [1, 3, 10, 30]
  preconditioning_compute_steps:
    value: 30
  early_preconditioning_compute_steps:
    value: 30
command:
  - ${env}
  - mpirun
  - ${env:MPIOPTS}
  - -np
  - 4
  - python
  - ${program}
  - ${args_no_boolean_flags}