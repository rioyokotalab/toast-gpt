program: train.py
method: grid
metric:
  name: train/loss
  goal: minimize
parameters:
  log_interval:
    value: 1
  dataset:
    values: ['openwebtext']
  gradient_accumulation_steps:
    value: 8
  batch_size:
    value: 12
  block_size:
    value: 128
  n_layer:
    value: 6
  n_head:
    value: 6
  n_embd:
    value: 384
  beta1:
    value: 0.9
  beta2:
    values: [0.85, 0.95]
  learning_rate:
    values: [1e-2, 3e-2, 3e-3]
  max_iters:
    value: 10000
  lr_decay_iters:
    value: 10000
  warmup_iters:
    value: 2000
  eval_iters:
    value: 20
  eval_interval:
    value: 20
  matrix_eps:
    values: [1e-6]
  weight_decay:
    values: [1e-5]
  gradient_value_clip:
    value: -1
  optim:
    values: ['Shampoo']
  grafting:
    value: 'AdaGrad'
  early_phase_ratio:
    values: [0]
  statistics_compute_steps:
    value: 1
  early_statistics_compute_steps:
    value: 1
  preconditioning_compute_steps:
    values: [3]
  early_preconditioning_compute_steps:
    values: [3]
  interval_cosine_thres_all:
    values: [0.85, 0.9, 0.95]
  interval_scheduling_factor_all:
    values: [1.1, 1.4, 2]
command:
  - ${env}
  - python 
  - ${program}
  - ${args_no_boolean_flags}